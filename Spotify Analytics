# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

--determine who the top 10 artists are by popularity--
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10

--display track name--
SELECT track_name
FROM BIT_DB.spotifydata

--display artist and track name--
SELECT artist_name, track_name
FROM BIT_DB.spotifydata

--display the artist name that has an id of 16--
SELECT id, artist_name 
FROM BIT_DB.spotifydata 
WHERE id = 16

--display track name that has a duration between 200000 and 250000--
SELECT track_name , artist_name
FROM BIT.DB.spotifydata
WHERE duration_ms BETWEEN 200000 AND 250000

--display track name and artist name wher epopularity is greater than 90--
SELECT track_name, artist_name
FROM BIT_DB.spotifydata
WHERE popularity > 90 

--display songs by Doja Cat--
SELECT * 
FROM BIT_DB.spotifydata
WHERE artist_name LIKE "Doja Cat"
